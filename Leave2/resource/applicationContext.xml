<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
         destroy-method="close">
         <property name="driverClassName" value="com.mysql.jdbc.Driver" />
         <property name="url" value="jdbc:mysql://localhost:3306/activiti2?zeroDateTimeBehavior=convertToNull" />
         <property name="username" value="root"/>
         <property name="password" value="admin"/>
         <property name="initialSize" value="20" />
         <property name="maxActive" value="50"/>
         <property name="maxIdle" value="20"/>
         <property name="minIdle" value="10"/>
    </bean>
    
    
    <!-- 启用Spring Annotation -->
	<context:annotation-config ></context:annotation-config>
    	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.activiti">
		 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> 
	</context:component-scan>
	
	 
<!-- 创建SessionFactory，这是spring整合hibernate的核心 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 1.配置datasource -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 2.配置Hibernate属性 -->
		<property name="hibernateProperties">
			<value>
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
			</value>
		</property>
		<!-- 3.配置映射文件 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:com/activiti/entity/*.hbm.xml</value>
			</list>
		</property>
	</bean>
	<mvc:annotation-driven />
	<!-- 
	配置事务
	 -->
	<!-- 1.配置事务管理器 -->
	<bean id="transManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 2.配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transManager">
		<tx:attributes>
			<tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 3.配置切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.activiti.service..*.*(..))" id="aopPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aopPointcut" />
	</aop:config>
	
	<!--  配置基础的Dao，在其他的DAO中只需要继承即可 -->
	<bean id="baseDao" abstract="true">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
		<bean id="employeeDao" class="com.activiti.dao.impl.EmployeeDaoImpl" parent="baseDao">
	</bean>
	    <bean id="leaveBillDao" class="com.activiti.dao.impl.LeaveBillDaoImpl" parent="baseDao">
	</bean>
	    <bean id="reimburseBillDao" class="com.activiti.dao.impl.ReimburseBillDaoImpl" parent="baseDao">
	</bean>
	<bean id="ibase" class="com.activiti.dao.impl.IBaseImpl" parent="baseDao">
	</bean>
	<import resource="classpath:activiti.cfg.xml"/>
	<bean id="leaveBillService" class="com.activiti.service.impl.LeaveBillServiceImpl"></bean>
	<bean id="reimburseBillService" class="com.activiti.service.impl.ReimburseBillServiceImpl"></bean>
	
	<bean class="com.activiti.ws.impl.BillWSImpl" id="BillWS" />
    <jaxws:server address="/bill">
		<jaxws:serviceBean>
		<!-- 采用引用的方式获取 本地的cn.it.ws.h.StudentServiceImpl 并且发布ws服务 -->
			<ref bean="BillWS"/>
		</jaxws:serviceBean>
		<!-- 配置日志 -->
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingInInterceptor" />
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor" />			
		</jaxws:outInterceptors>
	</jaxws:server>
	
	<bean class="com.activiti.ws.impl.WorkFlowWSImpl" id="WorkFlowWS" />
    <jaxws:server address="/workflow">
		<jaxws:serviceBean>
		<!-- 采用引用的方式获取 本地的cn.it.ws.h.StudentServiceImpl 并且发布ws服务 -->
			<ref bean="WorkFlowWS"/>
		</jaxws:serviceBean>
		<!-- 配置日志 -->
		<jaxws:inInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingInInterceptor" />
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor" />			
		</jaxws:outInterceptors>
	</jaxws:server>
	

</beans>
